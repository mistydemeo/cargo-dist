<?xml version="1.0" encoding="utf-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>dist Changelog</title><link>http://127.0.0.1:7979/cargo-dist/changelog</link><description>Changelog information for dist</description><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><atom:link href="http://127.0.0.1:7979/cargo-dist/changelog.rss" rel="self"/><item><title>Version 1.0.0-rc.1</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v1.0.0-rc.1</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v1.0.0-rc.1</guid><content:encoded><![CDATA[<p>Nothing Yet!</p>
]]></content:encoded></item><item><title>Version 0.28.0 (2025-01-08)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.28.0</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.28.0</guid><content:encoded><![CDATA[<p>This release contains a new feature that improves the Windows PowerShell installer. We've also made some behind-the-scenes changes which most users won't notice yet - keep an eye out for our next major release!</p>
<h2>PowerShell improvements</h2>
<p>While we've always updated the user's <code>Path</code> variable for them, in the past the user had to reboot their system for the change to be reflected or temporarily add the installation directory to the <code>Path</code> themselves. Starting in 0.28.0, we now only require you to restart your shell for the change to take effect, not the entire system. We've also made improvements to our handling of this variable to better support users whose <code>Path</code> contained variable expansions.</p>
<p>Thanks to open source contributor @DavisVaughan, who did extensive research as well as writing the feature!</p>
<ul>
<li>impl @DavisVaughan <a href="https://github.com/axodotdev/cargo-dist/pull/1658" rel="noopener noreferrer">Rework Add-Path to avoid expanding and request an environment refresh</a></li>
</ul>
<h2>Fixes</h2>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1681" rel="noopener noreferrer">Properly support installing apt packages from the default cargo-xwin builder</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.27.1 (2025-01-06)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.27.1</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.27.1</guid><content:encoded><![CDATA[<h2>Fixed a bug where <code>dist migrate</code> would delete <code>dist-workspace.toml</code></h2>
<p>A bug was introduced in 0.27.0 where, instead of <code>dist migrate</code> <em>never</em> deleting <code>dist-workspace.toml</code>, it would <em>always</em> delete it. This has been fixed.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1661" rel="noopener noreferrer">fix: avoid 'dist migrate' deleting dist-workspace.toml</a></li>
</ul>
<h2>Warn if a tool is "shadowed" on your PATH</h2>
<p>Shell installers now check if the tool it installed is shadowed by another tool on your path.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1659" rel="noopener noreferrer">feat: check for shadowed binaries in shell installer</a></li>
</ul>
<h2>Prefer GitHub over Axo Releases</h2>
<p>This release switches the preferred installation location to GitHub. In prior releases, if the user had both GitHub Releases and Axo Releases selected, generated installation scripts and receipts would prefer to fetch from GitHub.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1673" rel="noopener noreferrer">feat: prioritize github over axo</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.27.1-prerelease.1 (2024-12-20)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.27.1-prerelease.1</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.27.1-prerelease.1</guid><content:encoded><![CDATA[<h2>Fixed a bug where <code>dist migrate</code> would delete <code>dist-workspace.toml</code></h2>
<p>A bug was introduced in 0.27.0 where, instead of <code>dist migrate</code> <em>never</em> deleting <code>dist-workspace.toml</code>, it would <em>always</em> delete it. This has been fixed.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1661" rel="noopener noreferrer">fix: avoid 'dist migrate' deleting dist-workspace.toml</a></li>
</ul>
<h2>Warn if a tool is "shadowed" on your PATH</h2>
<p>Shell installers now check if the tool it installed is shadowed by another tool on your path.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1659" rel="noopener noreferrer">feat: check for shadowed binaries in shell installer</a></li>
</ul>
<h2>Prefer GitHub over Axo Releases</h2>
<p>This release switches the preferred installation location to GitHub. In prior releases, if the user had both GitHub Releases and Axo Releases selected, generated installation scripts and receipts would prefer to fetch from GitHub.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1673" rel="noopener noreferrer">feat: prioritize github over axo</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.27.0 (2024-12-19)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.27.0</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.27.0</guid><content:encoded><![CDATA[<p>We're back once more with a little holiday gift for you. This release contains a few new features and fixes.</p>
<h2>Support for XDG_CONFIG_HOME</h2>
<p>We've always supported standard OS configuration paths. This release adds support for <code>XDG_CONFIG_HOME</code>, an <a href="https://specifications.freedesktop.org/basedir-spec/latest/#variables" rel="noopener noreferrer">environment variable defined in the XDG Base Directory Specification</a>, in order to allow users to override that default. We support this on all platforms, even Windows. Installers created with dist 0.27.0 or later will respect this environment variable and place install receipts in that path; updaters using axoupdater 0.9.0 or later will respect that variable when searching for the receipt.</p>
<ul>
<li>impl @brennanfee, @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1655" rel="noopener noreferrer">feat: support XDG_CONFIG_HOME</a></li>
</ul>
<h2>Improved handling of missing build dependencies</h2>
<p>While we've always reported if mandatory tools are missing, we previously would only check for their existence right before we'd use them. This made it hard to judge exactly when required tools might be absent, and meant we'd only report about a single tool at a time. With this release, we now check for these tools up front and we check for every tool your build will need simultaneously. This allows us to tell you about <em>every</em> missing tool in one message, and before the builds themselves begin.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1640" rel="noopener noreferrer">Fail early if required tools can't be found.</a></li>
</ul>
<h2>Improved generic config handling</h2>
<p>Since we shipped the new config format, <code>dist-workspace.toml</code>, we've been providing some spurious messages for non-Rust builds using just a <code>dist.toml</code> file. In this release, we now migrate users with <code>dist.toml</code>-alone apps to <code>dist-workspace.toml</code>. This conversion is automatic and requires no user input; it will happen when using <code>dist init</code> to upgrade to a new release.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1656" rel="noopener noreferrer">feat: migrate dist.toml to dist-workspace.toml</a></li>
</ul>
<h2>Stabilizing the standalone updater we ship</h2>
<p>In the past, we always shipped the latest version of the standalone updater provided via <a href="https://github.com/axodotdev/axoupdater" rel="noopener noreferrer">axoupdater</a>. This meant that, if a new version of axoupdater was released after a given version of dist, your app would receive that latest version. As we've stabilized the updater's feature set, we feel that end users are deriving less benefit from this rolling release schedule and it would be more helpful to provide a fixed, known-good stable release instead.</p>
<p>Beginning with this release, dist will always package the same version of axoupdater when building and shipping your app. If you prefer the old behaviour, and would like to receive whatever's the latest, you can set <code>always-use-latest-updater = true</code> in your configuration.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1598" rel="noopener noreferrer">feat: update axoupdater, fetch known-good version</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.27.0-prerelease.1 (2024-12-19)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.27.0-prerelease.1</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.27.0-prerelease.1</guid><content:encoded><![CDATA[<p>We're back once more with a little holiday gift for you. This release contains a few new features and fixes.</p>
<h2>Support for XDG_CONFIG_HOME</h2>
<p>We've always supported standard OS configuration paths. This release adds support for <code>XDG_CONFIG_HOME</code>, an <a href="https://specifications.freedesktop.org/basedir-spec/latest/#variables" rel="noopener noreferrer">environment variable defined in the XDG Base Directory Specification</a>, in order to allow users to override that default. We support this on all platforms, even Windows. Installers created with dist 0.27.0 or later will respect this environment variable and place install receipts in that path; updaters using axoupdater 0.9.0 or later will respect that variable when searching for the receipt.</p>
<ul>
<li>impl @brennanfee, @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1655" rel="noopener noreferrer">feat: support XDG_CONFIG_HOME</a></li>
</ul>
<h2>Improved handling of missing build dependencies</h2>
<p>While we've always reported if mandatory tools are missing, we previously would only check for their existence right before we'd use them. This made it hard to judge exactly when required tools might be absent, and meant we'd only report about a single tool at a time. With this release, we now check for these tools up front and we check for every tool your build will need simultaneously. This allows us to tell you about <em>every</em> missing tool in one message, and before the builds themselves begin.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1640" rel="noopener noreferrer">Fail early if required tools can't be found.</a></li>
</ul>
<h2>Improved generic config handling</h2>
<p>Since we shipped the new config format, <code>dist-workspace.toml</code>, we've been providing some spurious messages for non-Rust builds using just a <code>dist.toml</code> file. In this release, we now migrate users with <code>dist.toml</code>-alone apps to <code>dist-workspace.toml</code>. This conversion is automatic and requires no user input; it will happen when using <code>dist init</code> to upgrade to a new release.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1656" rel="noopener noreferrer">feat: migrate dist.toml to dist-workspace.toml</a></li>
</ul>
<h2>Stabilizing the standalone updater we ship</h2>
<p>In the past, we always shipped the latest version of the standalone updater provided via <a href="https://github.com/axodotdev/axoupdater" rel="noopener noreferrer">axoupdater</a>. This meant that, if a new version of axoupdater was released after a given version of dist, your app would receive that latest version. As we've stabilized the updater's feature set, we feel that end users are deriving less benefit from this rolling release schedule and it would be more helpful to provide a fixed, known-good stable release instead.</p>
<p>Beginning with this release, dist will always package the same version of axoupdater when building and shipping your app. If you prefer the old behaviour, and would like to receive whatever's the latest, you can set <code>always-use-latest-updater = true</code> in your configuration.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1598" rel="noopener noreferrer">feat: update axoupdater, fetch known-good version</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.26.1 (2024-12-12)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.26.1</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.26.1</guid><content:encoded><![CDATA[<p>This is a bugfix release which fixes an issue where aarch64 Windows cross-compilation wouldn't work out of the box. We've updated the default configuration to ensure that this target just works without additional configuration.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1635" rel="noopener noreferrer">fix: always cross-compile to windows via xwin</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.26.0 (2024-12-12)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.26.0</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.26.0</guid><content:encoded><![CDATA[<p>It's been slightly longer than usual since our last release, and now we're back with a slightly larger than usual release! This version brings several major new features and improvements, including the long-requested Rust cross-compilation feature and support for a few different Rust dependency version tracking formats.</p>
<h2>Builtin Rust cross-compilation support</h2>
<p>You've all asked for it, and it's finally here! Previously, we only supported Rust cross-compilation on macOS. With this release, we've extended Rust cross-compilation support to Linux (using <a href="https://github.com/rust-cross/cargo-zigbuild" rel="noopener noreferrer">cargo-zigbuild</a> and Windows (using <a href="https://github.com/rust-cross/cargo-xwin" rel="noopener noreferrer">cargo-xwin</a>. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/ci/customizing.html#cross-compilation" rel="noopener noreferrer">the docs</a>.</p>
<p>We're also making use of this feature ourselves: we now build our aarch64 Linux binaries using this new tooling.</p>
<p>(Note: for technical reasons, cargo-zigbuild cross-compiles and cargo-auditable are currently mutually exclusive. Users can only enable one or the other. cargo-xwin builds and cargo-auditable can be used together.)</p>
<ul>
<li>impl @fasterthanlime, @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1529" rel="noopener noreferrer">Add cross-compilation support via cargo-zigbuild and cargo-xwin</a></li>
</ul>
<h2>Checksum verifications in shell installers</h2>
<p>While we've always generated checksum information for binary tarballs/ZIPs, we only actually validated those checksums in the Homebrew installer. That changes with this release: we now embed checksum information into the shell installer and validate the tarball before unpacking it.</p>
<ul>
<li>impl @fasterthanlime <a href="https://github.com/axodotdev/cargo-dist/pull/1497" rel="noopener noreferrer">Verify checksums in install.sh</a></li>
</ul>
<h2>cargo-auditable support</h2>
<p>We've added integrated support for the Rust Secure Code Working Group's <a href="https://github.com/rust-secure-code/cargo-auditable" rel="noopener noreferrer">cargo-auditable</a>, which embeds dependency information in your Rust binaries and makes it possible for users to check your binaries for the full dependency tree they were built from with their precise versions. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#cargo-auditable" rel="noopener noreferrer">our docs</a> and the <a href="https://github.com/rustsec/rustsec/blob/main/cargo-audit/README.md" rel="noopener noreferrer">docs for the cargo-audit tool</a>.</p>
<p>(Note: for technical reasons, this feature and cargo-zigbuild cross-compiles are currently mutually exclusive. Users can only enable one or the other. cargo-xwin builds and cargo-auditable can be used together.)</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1528" rel="noopener noreferrer">Add cargo-auditable config option</a></li>
</ul>
<h2>cargo-cyclonedx support</h2>
<p>We've also added support for generating <a href="https://cyclonedx.org" rel="noopener noreferrer">CyloneDX Software Bill of Materials (SBOM)</a> files for Rust projects. We've implemented this using the <a href="https://github.com/CycloneDX/cyclonedx-rust-cargo/blob/main/cargo-cyclonedx/README.md" rel="noopener noreferrer">cargo-cyclonedx</a> tool. Unlike the cargo-auditable support above, which embeds dependency information directly into your binaries, this data is stored as a standalone <code>bom.xml</code> file which is distributed with your software. Users can then validate that SBOM file using <a href="https://cyclonedx.org/tool-center/" rel="noopener noreferrer">any compatible CycloneDX tool</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1531" rel="noopener noreferrer">Add cargo-cyclonedx config option.</a></li>
</ul>
<h2>OmniBOR support</h2>
<p>Rounding out this release's new security features, we've added support for <a href="https://omnibor.io" rel="noopener noreferrer">generating OmniBOR artifact IDs</a>. We implement this using the <a href="https://github.com/omnibor/omnibor-rs/tree/main/omnibor-cli" rel="noopener noreferrer">omnibor-cli</a> tool. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#omnibor" rel="noopener noreferrer">the docs</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1568" rel="noopener noreferrer">Add option to generate omnibor artifact IDs.</a></li>
</ul>
<h2>Strict error catching in template rendering</h2>
<p>We've tightened up error handling for undefined values in templates when we create things such as installer scripts and the GitHub Actions YAML config. Any errors that occur here are dist's fault, not users' fault, and stricter error handling ensures we get the information we need to fix dist bugs and make this code more reliable. This was made possible thanks to a contribution by @fasterthanlime to the minijinja project, ensuring that we get actionable messages for these kinds of errors.</p>
<ul>
<li>impl @fasterthanlime <a href="https://github.com/axodotdev/cargo-dist/pull/1499" rel="noopener noreferrer">Enable jinja "strict undefined behavior", fix templates, improve reporting</a></li>
</ul>
<h2>Per-target glibc version overrides</h2>
<p>Although we autodetect the glibc version used by your software in order to check the minimum requirements during install, users who bypass our build mechanism and run a custom build job didn't get the benefit of this feature. To compensate, we've added support for manually specifying the glibc version your software needs. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#min-glibc-version" rel="noopener noreferrer">the docs</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1537" rel="noopener noreferrer">Allow per-target glibc version overrides.</a></li>
</ul>
<h2>Tag-parsing and library-only mode improvements</h2>
<p>We've tightened up the tag parsing code, ensuring that a few edge cases are handled more predictably. The <code>dist plan</code> output is now clearer in workspaces with multiple versions, with better instruction text on how to resolve unclear situations. We've also made a small change to <code>dist = false</code> handling, which means that we now refuse to run if a release tag only matches a crate with <code>dist = false</code> instead of going ahead with single library mode.</p>
<ul>
<li>impl
<ul>
<li>@duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1551" rel="noopener noreferrer">Avoid discarding tag information, so "dist plan --tag={name}-{version}" works.</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1441" rel="noopener noreferrer">Disable single-library mode for dist=false</a></li>
<li>@alilleybrinker <a href="https://github.com/axodotdev/cargo-dist/pull/1579" rel="noopener noreferrer">Permit tag incoherence for dist plan</a></li>
</ul>
</li>
</ul>
<h2>Improved pc-windows-gnu support</h2>
<p>Although we've previously supported <code>pc-windows-gnu</code> builds for Rust software, we had a few notable gotchas: we wouldn't install <code>choco</code> dependencies, and PowerShell installers couldn't install them. We've fixed both of these issues this release, ensuring these targets are a bit closer to <code>pc-windows-msvc</code> in support.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1586" rel="noopener noreferrer">feat: add pc-windows-gnu to powershell installers</a></li>
</ul>
<h2>Fixes</h2>
<ul>
<li>@pnehrer <a href="https://github.com/axodotdev/cargo-dist/pull/1566" rel="noopener noreferrer">Explicitly set manifest path when building MSI with WiX</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.26.0-prerelease.4</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.26.0-prerelease.4</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.26.0-prerelease.4</guid><content:encoded><![CDATA[<p>It's been slightly longer than usual since our last release, and now we're back with a slightly larger than usual release! This version brings several major new features and improvements, including the long-requested Rust cross-compilation feature and support for a few different Rust dependency version tracking formats.</p>
<h2>Builtin Rust cross-compilation support</h2>
<p>You've all asked for it, and it's finally here! Previously, we only supported Rust cross-compilation on macOS. With this release, we've extended Rust cross-compilation support to Linux (using <a href="https://github.com/rust-cross/cargo-zigbuild" rel="noopener noreferrer">cargo-zigbuild</a> and Windows (using <a href="https://github.com/rust-cross/cargo-xwin" rel="noopener noreferrer">cargo-xwin</a>. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/ci/customizing.html#cross-compilation" rel="noopener noreferrer">the docs</a>.</p>
<p>We're also making use of this feature ourselves: we now build our aarch64 Linux binaries using this new tooling.</p>
<p>(Note: for technical reasons, cargo-zigbuild cross-compiles and cargo-auditable are currently mutually exclusive. Users can only enable one or the other. cargo-xwin builds and cargo-auditable can be used together.)</p>
<ul>
<li>impl @fasterthanlime, @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1529" rel="noopener noreferrer">Add cross-compilation support via cargo-zigbuild and cargo-xwin</a></li>
</ul>
<h2>Checksum verifications in shell installers</h2>
<p>While we've always generated checksum information for binary tarballs/ZIPs, we only actually validated those checksums in the Homebrew installer. That changes with this release: we now embed checksum information into the shell installer and validate the tarball before unpacking it.</p>
<ul>
<li>impl @fasterthanlime <a href="https://github.com/axodotdev/cargo-dist/pull/1497" rel="noopener noreferrer">Verify checksums in install.sh</a></li>
</ul>
<h2>cargo-auditable support</h2>
<p>We've added integrated support for the Rust Secure Code Working Group's <a href="https://github.com/rust-secure-code/cargo-auditable" rel="noopener noreferrer">cargo-auditable</a>, which embeds dependency information in your Rust binaries and makes it possible for users to check your binaries for the full dependency tree they were built from with their precise versions. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#cargo-auditable" rel="noopener noreferrer">our docs</a> and the <a href="https://github.com/rustsec/rustsec/blob/main/cargo-audit/README.md" rel="noopener noreferrer">docs for the cargo-audit tool</a>.</p>
<p>(Note: for technical reasons, this feature and cargo-zigbuild cross-compiles are currently mutually exclusive. Users can only enable one or the other. cargo-xwin builds and cargo-auditable can be used together.)</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1528" rel="noopener noreferrer">Add cargo-auditable config option</a></li>
</ul>
<h2>cargo-cyclonedx support</h2>
<p>We've also added support for generating <a href="https://cyclonedx.org" rel="noopener noreferrer">CyloneDX Software Bill of Materials (SBOM)</a> files for Rust projects. We've implemented this using the <a href="https://github.com/CycloneDX/cyclonedx-rust-cargo/blob/main/cargo-cyclonedx/README.md" rel="noopener noreferrer">cargo-cyclonedx</a> tool. Unlike the cargo-auditable support above, which embeds dependency information directly into your binaries, this data is stored as a standalone <code>bom.xml</code> file which is distributed with your software. Users can then validate that SBOM file using <a href="https://cyclonedx.org/tool-center/" rel="noopener noreferrer">any compatible CycloneDX tool</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1531" rel="noopener noreferrer">Add cargo-cyclonedx config option.</a></li>
</ul>
<h2>OmniBOR support</h2>
<p>Rounding out this release's new security features, we've added support for <a href="https://omnibor.io" rel="noopener noreferrer">generating OmniBOR artifact IDs</a>. We implement this using the <a href="https://github.com/omnibor/omnibor-rs/tree/main/omnibor-cli" rel="noopener noreferrer">omnibor-cli</a> tool. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#omnibor" rel="noopener noreferrer">the docs</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1568" rel="noopener noreferrer">Add option to generate omnibor artifact IDs.</a></li>
</ul>
<h2>Strict error catching in template rendering</h2>
<p>We've tightened up error handling for undefined values in templates when we create things such as installer scripts and the GitHub Actions YAML config. Any errors that occur here are dist's fault, not users' fault, and stricter error handling ensures we get the information we need to fix dist bugs and make this code more reliable. This was made possible thanks to a contribution by @fasterthanlime to the minijinja project, ensuring that we get actionable messages for these kinds of errors.</p>
<ul>
<li>impl @fasterthanlime <a href="https://github.com/axodotdev/cargo-dist/pull/1499" rel="noopener noreferrer">Enable jinja "strict undefined behavior", fix templates, improve reporting</a></li>
</ul>
<h2>Per-target glibc version overrides</h2>
<p>Although we autodetect the glibc version used by your software in order to check the minimum requirements during install, users who bypass our build mechanism and run a custom build job didn't get the benefit of this feature. To compensate, we've added support for manually specifying the glibc version your software needs. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#min-glibc-version" rel="noopener noreferrer">the docs</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1537" rel="noopener noreferrer">Allow per-target glibc version overrides.</a></li>
</ul>
<h2>Tag-parsing and library-only mode improvements</h2>
<p>We've tightened up the tag parsing code, ensuring that a few edge cases are handled more predictably. The <code>dist plan</code> output is now clearer in workspaces with multiple versions, with better instruction text on how to resolve unclear situations. We've also made a small change to <code>dist = false</code> handling, which means that we now refuse to run if a release tag only matches a crate with <code>dist = false</code> instead of going ahead with single library mode.</p>
<ul>
<li>impl
<ul>
<li>@duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1551" rel="noopener noreferrer">Avoid discarding tag information, so "dist plan --tag={name}-{version}" works.</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1441" rel="noopener noreferrer">Disable single-library mode for dist=false</a></li>
<li>@alilleybrinker <a href="https://github.com/axodotdev/cargo-dist/pull/1579" rel="noopener noreferrer">Permit tag incoherence for dist plan</a></li>
</ul>
</li>
</ul>
<h2>Improved pc-windows-gnu support</h2>
<p>Although we've previously supported <code>pc-windows-gnu</code> builds for Rust software, we had a few notable gotchas: we wouldn't install <code>choco</code> dependencies, and PowerShell installers couldn't install them. We've fixed both of these issues this release, ensuring these targets are a bit closer to <code>pc-windows-msvc</code> in support.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1586" rel="noopener noreferrer">feat: add pc-windows-gnu to powershell installers</a></li>
</ul>
<h2>Fixes</h2>
<ul>
<li>@pnehrer <a href="https://github.com/axodotdev/cargo-dist/pull/1566" rel="noopener noreferrer">Explicitly set manifest path when building MSI with WiX</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.26.0-prerelease.3</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.26.0-prerelease.3</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.26.0-prerelease.3</guid><content:encoded><![CDATA[<p>It's been slightly longer than usual since our last release, and now we're back with a slightly larger than usual release! This version brings several major new features and improvements, including the long-requested Rust cross-compilation feature and support for a few different Rust dependency version tracking formats.</p>
<h2>Builtin Rust cross-compilation support</h2>
<p>You've all asked for it, and it's finally here! Previously, we only supported Rust cross-compilation on macOS. With this release, we've extended Rust cross-compilation support to Linux (using <a href="https://github.com/rust-cross/cargo-zigbuild" rel="noopener noreferrer">cargo-zigbuild</a> and Windows (using <a href="https://github.com/rust-cross/cargo-xwin" rel="noopener noreferrer">cargo-xwin</a>. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/ci/customizing.html#cross-compilation" rel="noopener noreferrer">the docs</a>.</p>
<p>We're also making use of this feature ourselves: we now build our aarch64 Linux binaries using this new tooling.</p>
<p>(Note: for technical reasons, cargo-zigbuild cross-compiles and cargo-auditable are currently mutually exclusive. Users can only enable one or the other. cargo-xwin builds and cargo-auditable can be used together.)</p>
<ul>
<li>impl @fasterthanlime, @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1529" rel="noopener noreferrer">Add cross-compilation support via cargo-zigbuild and cargo-xwin</a></li>
</ul>
<h2>Checksum verifications in shell installers</h2>
<p>While we've always generated checksum information for binary tarballs/ZIPs, we only actually validated those checksums in the Homebrew installer. That changes with this release: we now embed checksum information into the shell installer and validate the tarball before unpacking it.</p>
<ul>
<li>impl @fasterthanlime <a href="https://github.com/axodotdev/cargo-dist/pull/1497" rel="noopener noreferrer">Verify checksums in install.sh</a></li>
</ul>
<h2>cargo-auditable support</h2>
<p>We've added integrated support for the Rust Secure Code Working Group's <a href="https://github.com/rust-secure-code/cargo-auditable" rel="noopener noreferrer">cargo-auditable</a>, which embeds dependency information in your Rust binaries and makes it possible for users to check your binaries for the full dependency tree they were built from with their precise versions. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#cargo-auditable" rel="noopener noreferrer">our docs</a> and the <a href="https://github.com/rustsec/rustsec/blob/main/cargo-audit/README.md" rel="noopener noreferrer">docs for the cargo-audit tool</a>.</p>
<p>(Note: for technical reasons, this feature and cargo-zigbuild cross-compiles are currently mutually exclusive. Users can only enable one or the other. cargo-xwin builds and cargo-auditable can be used together.)</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1528" rel="noopener noreferrer">Add cargo-auditable config option</a></li>
</ul>
<h2>cargo-cyclonedx support</h2>
<p>We've also added support for generating <a href="https://cyclonedx.org" rel="noopener noreferrer">CyloneDX Software Bill of Materials (SBOM)</a> files for Rust projects. We've implemented this using the <a href="https://github.com/CycloneDX/cyclonedx-rust-cargo/blob/main/cargo-cyclonedx/README.md" rel="noopener noreferrer">cargo-cyclonedx</a> tool. Unlike the cargo-auditable support above, which embeds dependency information directly into your binaries, this data is stored as a standalone <code>bom.xml</code> file which is distributed with your software. Users can then validate that SBOM file using <a href="https://cyclonedx.org/tool-center/" rel="noopener noreferrer">any compatible CycloneDX tool</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1531" rel="noopener noreferrer">Add cargo-cyclonedx config option.</a></li>
</ul>
<h2>OmniBOR support</h2>
<p>Rounding out this release's new security features, we've added support for <a href="https://omnibor.io" rel="noopener noreferrer">generating OmniBOR artifact IDs</a>. We implement this using the <a href="https://github.com/omnibor/omnibor-rs/tree/main/omnibor-cli" rel="noopener noreferrer">omnibor-cli</a> tool. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#omnibor" rel="noopener noreferrer">the docs</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1568" rel="noopener noreferrer">Add option to generate omnibor artifact IDs.</a></li>
</ul>
<h2>Strict error catching in template rendering</h2>
<p>We've tightened up error handling for undefined values in templates when we create things such as installer scripts and the GitHub Actions YAML config. Any errors that occur here are dist's fault, not users' fault, and stricter error handling ensures we get the information we need to fix dist bugs and make this code more reliable. This was made possible thanks to a contribution by @fasterthanlime to the minijinja project, ensuring that we get actionable messages for these kinds of errors.</p>
<ul>
<li>impl @fasterthanlime <a href="https://github.com/axodotdev/cargo-dist/pull/1499" rel="noopener noreferrer">Enable jinja "strict undefined behavior", fix templates, improve reporting</a></li>
</ul>
<h2>Per-target glibc version overrides</h2>
<p>Although we autodetect the glibc version used by your software in order to check the minimum requirements during install, users who bypass our build mechanism and run a custom build job didn't get the benefit of this feature. To compensate, we've added support for manually specifying the glibc version your software needs. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#min-glibc-version" rel="noopener noreferrer">the docs</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1537" rel="noopener noreferrer">Allow per-target glibc version overrides.</a></li>
</ul>
<h2>Tag-parsing and library-only mode improvements</h2>
<p>We've tightened up the tag parsing code, ensuring that a few edge cases are handled more predictably. The <code>dist plan</code> output is now clearer in workspaces with multiple versions, with better instruction text on how to resolve unclear situations. We've also made a small change to <code>dist = false</code> handling, which means that we now refuse to run if a release tag only matches a crate with <code>dist = false</code> instead of going ahead with single library mode.</p>
<ul>
<li>impl
<ul>
<li>@duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1551" rel="noopener noreferrer">Avoid discarding tag information, so "dist plan --tag={name}-{version}" works.</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1441" rel="noopener noreferrer">Disable single-library mode for dist=false</a></li>
<li>@alilleybrinker <a href="https://github.com/axodotdev/cargo-dist/pull/1579" rel="noopener noreferrer">Permit tag incoherence for dist plan</a></li>
</ul>
</li>
</ul>
<h2>Improved pc-windows-gnu support</h2>
<p>Although we've previously supported <code>pc-windows-gnu</code> builds for Rust software, we had a few notable gotchas: we wouldn't install <code>choco</code> dependencies, and PowerShell installers couldn't install them. We've fixed both of these issues this release, ensuring these targets are a bit closer to <code>pc-windows-msvc</code> in support.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1586" rel="noopener noreferrer">feat: add pc-windows-gnu to powershell installers</a></li>
</ul>
<h2>Fixes</h2>
<ul>
<li>@pnehrer <a href="https://github.com/axodotdev/cargo-dist/pull/1566" rel="noopener noreferrer">Explicitly set manifest path when building MSI with WiX</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.26.0-prerelease.2</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.26.0-prerelease.2</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.26.0-prerelease.2</guid><content:encoded><![CDATA[<p>It's been slightly longer than usual since our last release, and now we're back with a slightly larger than usual release! This version brings several major new features and improvements, including the long-requested Rust cross-compilation feature and support for a few different Rust dependency version tracking formats.</p>
<h2>Builtin Rust cross-compilation support</h2>
<p>You've all asked for it, and it's finally here! Previously, we only supported Rust cross-compilation on macOS. With this release, we've extended Rust cross-compilation support to Linux (using <a href="https://github.com/rust-cross/cargo-zigbuild" rel="noopener noreferrer">cargo-zigbuild</a> and Windows (using <a href="https://github.com/rust-cross/cargo-xwin" rel="noopener noreferrer">cargo-xwin</a>. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/ci/customizing.html#cross-compilation" rel="noopener noreferrer">the docs</a>.</p>
<p>We're also making use of this feature ourselves: we now build our aarch64 Linux binaries using this new tooling.</p>
<p>(Note: for technical reasons, cargo-zigbuild cross-compiles and cargo-auditable are currently mutually exclusive. Users can only enable one or the other. cargo-xwin builds and cargo-auditable can be used together.)</p>
<ul>
<li>impl @fasterthanlime, @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1529" rel="noopener noreferrer">Add cross-compilation support via cargo-zigbuild and cargo-xwin</a></li>
</ul>
<h2>Checksum verifications in shell installers</h2>
<p>While we've always generated checksum information for binary tarballs/ZIPs, we only actually validated those checksums in the Homebrew installer. That changes with this release: we now embed checksum information into the shell installer and validate the tarball before unpacking it.</p>
<ul>
<li>impl @fasterthanlime <a href="https://github.com/axodotdev/cargo-dist/pull/1497" rel="noopener noreferrer">Verify checksums in install.sh</a></li>
</ul>
<h2>cargo-auditable support</h2>
<p>We've added integrated support for the Rust Secure Code Working Group's <a href="https://github.com/rust-secure-code/cargo-auditable" rel="noopener noreferrer">cargo-auditable</a>, which embeds dependency information in your Rust binaries and makes it possible for users to check your binaries for the full dependency tree they were built from with their precise versions. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#cargo-auditable" rel="noopener noreferrer">our docs</a> and the <a href="https://github.com/rustsec/rustsec/blob/main/cargo-audit/README.md" rel="noopener noreferrer">docs for the cargo-audit tool</a>.</p>
<p>(Note: for technical reasons, this feature and cargo-zigbuild cross-compiles are currently mutually exclusive. Users can only enable one or the other. cargo-xwin builds and cargo-auditable can be used together.)</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1528" rel="noopener noreferrer">Add cargo-auditable config option</a></li>
</ul>
<h2>cargo-cyclonedx support</h2>
<p>We've also added support for generating <a href="https://cyclonedx.org" rel="noopener noreferrer">CyloneDX Software Bill of Materials (SBOM)</a> files for Rust projects. We've implemented this using the <a href="https://github.com/CycloneDX/cyclonedx-rust-cargo/blob/main/cargo-cyclonedx/README.md" rel="noopener noreferrer">cargo-cyclonedx</a> tool. Unlike the cargo-auditable support above, which embeds dependency information directly into your binaries, this data is stored as a standalone <code>bom.xml</code> file which is distributed with your software. Users can then validate that SBOM file using <a href="https://cyclonedx.org/tool-center/" rel="noopener noreferrer">any compatible CycloneDX tool</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1531" rel="noopener noreferrer">Add cargo-cyclonedx config option.</a></li>
</ul>
<h2>OmniBOR support</h2>
<p>Rounding out this release's new security features, we've added support for <a href="https://omnibor.io" rel="noopener noreferrer">generating OmniBOR artifact IDs</a>. We implement this using the <a href="https://github.com/omnibor/omnibor-rs/tree/main/omnibor-cli" rel="noopener noreferrer">omnibor-cli</a> tool. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#omnibor" rel="noopener noreferrer">the docs</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1568" rel="noopener noreferrer">Add option to generate omnibor artifact IDs.</a></li>
</ul>
<h2>Strict error catching in template rendering</h2>
<p>We've tightened up error handling for undefined values in templates when we create things such as installer scripts and the GitHub Actions YAML config. Any errors that occur here are dist's fault, not users' fault, and stricter error handling ensures we get the information we need to fix dist bugs and make this code more reliable. This was made possible thanks to a contribution by @fasterthanlime to the minijinja project, ensuring that we get actionable messages for these kinds of errors.</p>
<ul>
<li>impl @fasterthanlime <a href="https://github.com/axodotdev/cargo-dist/pull/1499" rel="noopener noreferrer">Enable jinja "strict undefined behavior", fix templates, improve reporting</a></li>
</ul>
<h2>Per-target glibc version overrides</h2>
<p>Although we autodetect the glibc version used by your software in order to check the minimum requirements during install, users who bypass our build mechanism and run a custom build job didn't get the benefit of this feature. To compensate, we've added support for manually specifying the glibc version your software needs. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#min-glibc-version" rel="noopener noreferrer">the docs</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1537" rel="noopener noreferrer">Allow per-target glibc version overrides.</a></li>
</ul>
<h2>Tag-parsing and library-only mode improvements</h2>
<p>We've tightened up the tag parsing code, ensuring that a few edge cases are handled more predictably. The <code>dist plan</code> output is now clearer in workspaces with multiple versions, with better instruction text on how to resolve unclear situations. We've also made a small change to <code>dist = false</code> handling, which means that we now refuse to run if a release tag only matches a crate with <code>dist = false</code> instead of going ahead with single library mode.</p>
<ul>
<li>impl
<ul>
<li>@duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1551" rel="noopener noreferrer">Avoid discarding tag information, so "dist plan --tag={name}-{version}" works.</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1441" rel="noopener noreferrer">Disable single-library mode for dist=false</a></li>
<li>@alilleybrinker <a href="https://github.com/axodotdev/cargo-dist/pull/1579" rel="noopener noreferrer">Permit tag incoherence for dist plan</a></li>
</ul>
</li>
</ul>
<h2>Improved pc-windows-gnu support</h2>
<p>Although we've previously supported <code>pc-windows-gnu</code> builds for Rust software, we had a few notable gotchas: we wouldn't install <code>choco</code> dependencies, and PowerShell installers couldn't install them. We've fixed both of these issues this release, ensuring these targets are a bit closer to <code>pc-windows-msvc</code> in support.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1586" rel="noopener noreferrer">feat: add pc-windows-gnu to powershell installers</a></li>
</ul>
<h2>Fixes</h2>
<ul>
<li>@pnehrer <a href="https://github.com/axodotdev/cargo-dist/pull/1566" rel="noopener noreferrer">Explicitly set manifest path when building MSI with WiX</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.26.0-prerelease.1</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.26.0-prerelease.1</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.26.0-prerelease.1</guid><content:encoded><![CDATA[<p>It's been slightly longer than usual since our last release, and now we're back with a slightly larger than usual release! This version brings several major new features and improvements, including the long-requested Rust cross-compilation feature and support for a few different Rust dependency version tracking formats.</p>
<h2>Builtin Rust cross-compilation support</h2>
<p>You've all asked for it, and it's finally here! Previously, we only supported Rust cross-compilation on macOS. With this release, we've extended Rust cross-compilation support to Linux (using <a href="https://github.com/rust-cross/cargo-zigbuild" rel="noopener noreferrer">cargo-zigbuild</a> and Windows (using <a href="https://github.com/rust-cross/cargo-xwin" rel="noopener noreferrer">cargo-xwin</a>. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/ci/customizing.html#cross-compilation" rel="noopener noreferrer">the docs</a>.</p>
<p>We're also making use of this feature ourselves: we now build our aarch64 Linux binaries using this new tooling.</p>
<p>(Note: for technical reasons, cargo-zigbuild cross-compiles and cargo-auditable are currently mutually exclusive. Users can only enable one or the other. cargo-xwin builds and cargo-auditable can be used together.)</p>
<ul>
<li>impl @fasterthanlime, @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1529" rel="noopener noreferrer">Add cross-compilation support via cargo-zigbuild and cargo-xwin</a></li>
</ul>
<h2>Checksum verifications in shell installers</h2>
<p>While we've always generated checksum information for binary tarballs/ZIPs, we only actually validated those checksums in the Homebrew installer. That changes with this release: we now embed checksum information into the shell installer and validate the tarball before unpacking it.</p>
<ul>
<li>impl @fasterthanlime <a href="https://github.com/axodotdev/cargo-dist/pull/1497" rel="noopener noreferrer">Verify checksums in install.sh</a></li>
</ul>
<h2>cargo-auditable support</h2>
<p>We've added integrated support for the Rust Secure Code Working Group's <a href="https://github.com/rust-secure-code/cargo-auditable" rel="noopener noreferrer">cargo-auditable</a>, which embeds dependency information in your Rust binaries and makes it possible for users to check your binaries for the full dependency tree they were built from with their precise versions. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#cargo-auditable" rel="noopener noreferrer">our docs</a> and the <a href="https://github.com/rustsec/rustsec/blob/main/cargo-audit/README.md" rel="noopener noreferrer">docs for the cargo-audit tool</a>.</p>
<p>(Note: for technical reasons, this feature and cargo-zigbuild cross-compiles are currently mutually exclusive. Users can only enable one or the other. cargo-xwin builds and cargo-auditable can be used together.)</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1528" rel="noopener noreferrer">Add cargo-auditable config option</a></li>
</ul>
<h2>cargo-cyclonedx support</h2>
<p>We've also added support for generating <a href="https://cyclonedx.org" rel="noopener noreferrer">CyloneDX Software Bill of Materials (SBOM)</a> files for Rust projects. We've implemented this using the <a href="https://github.com/CycloneDX/cyclonedx-rust-cargo/blob/main/cargo-cyclonedx/README.md" rel="noopener noreferrer">cargo-cyclonedx</a> tool. Unlike the cargo-auditable support above, which embeds dependency information directly into your binaries, this data is stored as a standalone <code>bom.xml</code> file which is distributed with your software. Users can then validate that SBOM file using <a href="https://cyclonedx.org/tool-center/" rel="noopener noreferrer">any compatible CycloneDX tool</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1531" rel="noopener noreferrer">Add cargo-cyclonedx config option.</a></li>
</ul>
<h2>OmniBOR support</h2>
<p>Rounding out this release's new security features, we've added support for <a href="https://omnibor.io" rel="noopener noreferrer">generating OmniBOR artifact IDs</a>. We implement this using the <a href="https://github.com/omnibor/omnibor-rs/tree/main/omnibor-cli" rel="noopener noreferrer">omnibor-cli</a> tool. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#omnibor" rel="noopener noreferrer">the docs</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1568" rel="noopener noreferrer">Add option to generate omnibor artifact IDs.</a></li>
</ul>
<h2>Strict error catching in template rendering</h2>
<p>We've tightened up error handling for undefined values in templates when we create things such as installer scripts and the GitHub Actions YAML config. Any errors that occur here are dist's fault, not users' fault, and stricter error handling ensures we get the information we need to fix dist bugs and make this code more reliable. This was made possible thanks to a contribution by @fasterthanlime to the minijinja project, ensuring that we get actionable messages for these kinds of errors.</p>
<ul>
<li>impl @fasterthanlime <a href="https://github.com/axodotdev/cargo-dist/pull/1499" rel="noopener noreferrer">Enable jinja "strict undefined behavior", fix templates, improve reporting</a></li>
</ul>
<h2>Per-target glibc version overrides</h2>
<p>Although we autodetect the glibc version used by your software in order to check the minimum requirements during install, users who bypass our build mechanism and run a custom build job didn't get the benefit of this feature. To compensate, we've added support for manually specifying the glibc version your software needs. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/reference/config.html#min-glibc-version" rel="noopener noreferrer">the docs</a>.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1537" rel="noopener noreferrer">Allow per-target glibc version overrides.</a></li>
</ul>
<h2>Tag-parsing and library-only mode improvements</h2>
<p>We've tightened up the tag parsing code, ensuring that a few edge cases are handled more predictably. The <code>dist plan</code> output is now clearer in workspaces with multiple versions, with better instruction text on how to resolve unclear situations. We've also made a small change to <code>dist = false</code> handling, which means that we now refuse to run if a release tag only matches a crate with <code>dist = false</code> instead of going ahead with single library mode.</p>
<ul>
<li>impl
<ul>
<li>@duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1551" rel="noopener noreferrer">Avoid discarding tag information, so "dist plan --tag={name}-{version}" works.</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1441" rel="noopener noreferrer">Disable single-library mode for dist=false</a></li>
<li>@alilleybrinker <a href="https://github.com/axodotdev/cargo-dist/pull/1579" rel="noopener noreferrer">Permit tag incoherence for dist plan</a></li>
</ul>
</li>
</ul>
<h2>Improved pc-windows-gnu support</h2>
<p>Although we've previously supported <code>pc-windows-gnu</code> builds for Rust software, we had a few notable gotchas: we wouldn't install <code>choco</code> dependencies, and PowerShell installers couldn't install them. We've fixed both of these issues this release, ensuring these targets are a bit closer to <code>pc-windows-msvc</code> in support.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1586" rel="noopener noreferrer">feat: add pc-windows-gnu to powershell installers</a></li>
</ul>
<h2>Fixes</h2>
<ul>
<li>@pnehrer <a href="https://github.com/axodotdev/cargo-dist/pull/1566" rel="noopener noreferrer">Explicitly set manifest path when building MSI with WiX</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.25.2-prerelease.3</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.25.2-prerelease.3</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.25.2-prerelease.3</guid><content:encoded><![CDATA[<p>Nothing Yet!</p>
]]></content:encoded></item><item><title>Version 0.25.2-prerelease.2</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.25.2-prerelease.2</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.25.2-prerelease.2</guid><content:encoded><![CDATA[<p>Nothing Yet!</p>
]]></content:encoded></item><item><title>Version 0.25.2-prerelease.0</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.25.2-prerelease.0</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.25.2-prerelease.0</guid><content:encoded><![CDATA[<p>Nothing Yet!</p>
]]></content:encoded></item><item><title>Version 0.25.1 (2024-11-01)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.25.1</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.25.1</guid><content:encoded><![CDATA[<p>This release contains a few new features for further customizing the installer experience, both as a packager and the end user.</p>
<h2>Artifact location installer customization</h2>
<p>We now provide two new environment variables making it possible to customize just the base URL for fetching installers. Previously, the only customization for overriding the install URL overrode the full URL, including version-specific paths, which made it difficult to use for users who were proxying or mirroring GitHub paths. These new variables are branded with your app's name. For example:</p>
<ul>
<li><code>{app_name}_INSTALLER_GITHUB_BASE_URL</code></li>
<li><code>{app_name}_INSTALLER_GHE_BASE_URL</code></li>
</ul>
<p>These two variables will also be supported by a new version of axoupdater in order to allow overriding the GitHub API URL. Thank you to user @gaborbernat for inspiring this change and writing the axoupdater side!</p>
<ul>
<li>impl @mistydemeo [feat: allow installer domain to be overridden](feat: allow installer domain to be overridden)</li>
</ul>
<p>You can learn more about this feature in the <a href="https://opensource.axo.dev/cargo-dist/book/installers/usage.html#artifact-location" rel="noopener noreferrer">artifact location installer usage documentation</a>.</p>
<h2>Default glibc version override</h2>
<p>Ordinarily, dist automatically detects the version of glibc used by your <code>linux-gnu</code> builds and uses this in the installers to detect if the end user's system will be compatible. In certain specific build environments, this autodetection isn't possible, so we've introduced a feature allowing the glibc version to be manually specified in the dist configuration. If provided, this replaces the fallback version that would otherwise be used.</p>
<ul>
<li>impl @duckinator <a href="https://github.com/axodotdev/cargo-dist/pull/1496" rel="noopener noreferrer">Allow overriding minimum supported glibc version.</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.25.0-prerelease.1 (2024-10-31)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.25.0-prerelease.1</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.25.0-prerelease.1</guid><content:encoded><![CDATA[<p>Nothing Yet!</p>
]]></content:encoded></item><item><title>Version 0.24.1 (2024-10-29)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.24.1</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.24.1</guid><content:encoded><![CDATA[<p>Loosens the "cargo is broken" error reporting condition, letting us be more
precise about cases where Cargo is present but Cargo metadata can't be parsed.</p>
<ul>
<li>impl @fasterthanlime <a href="https://github.com/axodotdev/cargo-dist/pull/1501" rel="noopener noreferrer">Distinguish "cargo metadata failed" from "cargo is not installed"</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.24.0 (2024-10-28)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.24.0</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.24.0</guid><content:encoded><![CDATA[<p>It's been less than two weeks, and we're already back with a big dist release for you. This release has several major features, beginning with the biggest news that:</p>
<h2>dist has a new name</h2>
<p>Did the last paragraph give it away? Well, it's true: <code>cargo-dist</code> is now just <code>dist</code>. This reflects our growing support for packaging software built by tools beyond just Cargo. Our support for Cargo isn't going away of course, or becoming any less of a focus.</p>
<p>As a part of this, <code>dist</code> has moved towards a standalone CLI tool that doesn't have to be run as a <code>cargo</code> subcommand. You can now run <code>dist init</code>, <code>dist build</code> and more without needing to prefix it with <code>cargo</code>. We still install the Cargo plugin, though, so you're welcome to keep using <code>cargo dist</code> like always. As a part of being able to run without the Cargo plugin, there's one more big change:</p>
<h2>dist runs without Cargo</h2>
<p><code>dist</code> no longer requires Cargo if you're not building Rust projects! This is a major change which should make it much more ergonomic for users of other languages. We do still require Cargo if your workspace contains at least one Rust project; this includes commands such as <code>dist init</code> and <code>dist plan</code>.</p>
<ul>
<li>impl @Gankra, @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1267" rel="noopener noreferrer">feat: make cargo optional</a></li>
</ul>
<h2>Unified checksum file</h2>
<p>This change is completely unrelated to the new name, but it's a very nice one. We've always shipped individual checksum files for each artifact, but in this release we now also ship a unified checksum file which contains all of your hashes in a single place. It's named <code>$HASH_STYLE.sum</code>, for example <code>sha256.sum</code>, and is designed to be compatible with tools such as <code>shasum</code> and <code>sha256sum</code>.</p>
<ul>
<li>impl @fasterthanlime <a href="https://github.com/axodotdev/cargo-dist/pull/1465" rel="noopener noreferrer">Introduce unified manifest file</a></li>
</ul>
<h2>Fixes</h2>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1457" rel="noopener noreferrer">fix: print Windows paths correctly</a></li>
<li>impl @pnehrer <a href="https://github.com/axodotdev/cargo-dist/pull/1454" rel="noopener noreferrer">Specify path to Cargo.toml when generating wix for package</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.24.0-prerelease.2</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.24.0-prerelease.2</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.24.0-prerelease.2</guid><content:encoded><![CDATA[<p>It's been less than two weeks, and we're already back with a big dist release for you. This release has several major features, beginning with the biggest news that:</p>
<h2>dist has a new name</h2>
<p>Did the last paragraph give it away? Well, it's true: <code>cargo-dist</code> is now just <code>dist</code>. This reflects our growing support for packaging software built by tools beyond just Cargo. Our support for Cargo isn't going away of course, or becoming any less of a focus.</p>
<p>As a part of this, <code>dist</code> has moved towards a standalone CLI tool that doesn't have to be run as a <code>cargo</code> subcommand. You can now run <code>dist init</code>, <code>dist build</code> and more without needing to prefix it with <code>cargo</code>. We still install the Cargo plugin, though, so you're welcome to keep using <code>cargo dist</code> like always. As a part of being able to run without the Cargo plugin, there's one more big change:</p>
<h2>dist runs without Cargo</h2>
<p><code>dist</code> no longer requires Cargo if you're not building Rust projects! This is a major change which should make it much more ergonomic for users of other languages. We do still require Cargo if your workspace contains at least one Rust project; this includes commands such as <code>dist init</code> and <code>dist plan</code>.</p>
<ul>
<li>impl @Gankra, @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1267" rel="noopener noreferrer">feat: make cargo optional</a></li>
</ul>
<h2>Unified checksum file</h2>
<p>This change is completely unrelated to the new name, but it's a very nice one. We've always shipped individual checksum files for each artifact, but in this release we now also ship a unified checksum file which contains all of your hashes in a single place. It's named <code>$HASH_STYLE.sum</code>, for example <code>sha256.sum</code>, and is designed to be compatible with tools such as <code>shasum</code> and <code>sha256sum</code>.</p>
<ul>
<li>impl @fasterthanlime <a href="https://github.com/axodotdev/cargo-dist/pull/1465" rel="noopener noreferrer">Introduce unified manifest file</a></li>
</ul>
<h2>Fixes</h2>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1457" rel="noopener noreferrer">fix: print Windows paths correctly</a></li>
<li>impl @pnehrer <a href="https://github.com/axodotdev/cargo-dist/pull/1454" rel="noopener noreferrer">Specify path to Cargo.toml when generating wix for package</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.24.0-prerelease.1</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.24.0-prerelease.1</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.24.0-prerelease.1</guid><content:encoded><![CDATA[<p>It's been less than two weeks, and we're already back with a big dist release for you. This release has several major features, beginning with the biggest news that:</p>
<h2>dist has a new name</h2>
<p>Did the last paragraph give it away? Well, it's true: <code>cargo-dist</code> is now just <code>dist</code>. This reflects our growing support for packaging software built by tools beyond just Cargo. Our support for Cargo isn't going away of course, or becoming any less of a focus.</p>
<p>As a part of this, <code>dist</code> has moved towards a standalone CLI tool that doesn't have to be run as a <code>cargo</code> subcommand. You can now run <code>dist init</code>, <code>dist build</code> and more without needing to prefix it with <code>cargo</code>. We still install the Cargo plugin, though, so you're welcome to keep using <code>cargo dist</code> like always. As a part of being able to run without the Cargo plugin, there's one more big change:</p>
<h2>dist runs without Cargo</h2>
<p><code>dist</code> no longer requires Cargo if you're not building Rust projects! This is a major change which should make it much more ergonomic for users of other languages. We do still require Cargo if your workspace contains at least one Rust project; this includes commands such as <code>dist init</code> and <code>dist plan</code>.</p>
<ul>
<li>impl @Gankra, @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1267" rel="noopener noreferrer">feat: make cargo optional</a></li>
</ul>
<h2>Unified checksum file</h2>
<p>This change is completely unrelated to the new name, but it's a very nice one. We've always shipped individual checksum files for each artifact, but in this release we now also ship a unified checksum file which contains all of your hashes in a single place. It's named <code>$HASH_STYLE.sum</code>, for example <code>sha256.sum</code>, and is designed to be compatible with tools such as <code>shasum</code> and <code>sha256sum</code>.</p>
<ul>
<li>impl @fasterthanlime <a href="https://github.com/axodotdev/cargo-dist/pull/1465" rel="noopener noreferrer">Introduce unified manifest file</a></li>
</ul>
<h2>Fixes</h2>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1457" rel="noopener noreferrer">fix: print Windows paths correctly</a></li>
<li>impl @pnehrer <a href="https://github.com/axodotdev/cargo-dist/pull/1454" rel="noopener noreferrer">Specify path to Cargo.toml when generating wix for package</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.23.0 (2024-10-15)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.23.0</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.23.0</guid><content:encoded><![CDATA[<p>We're back from a longer-than-usual break between releases with a feature-filled release!</p>
<h2>The new config format emerges</h2>
<p>Over the past few months, we've been working towards a new config format. Up to now, aside from a few references in the documentation, these changes have been internal and haven't been visible to users. This release marks the first user-facing side of the new config format.</p>
<p>This new config format uses the <code>dist-workspace.toml</code> and <code>dist.toml</code> files that were originally created for non-Rust projects. It allows us to unify project configuration formats between languages, and allows you to configure cargo-dist without adding content to your root <code>Cargo.toml</code>. In this release, newly <code>cargo init</code>ted Rust projects will use the new format. Existing projects will be given the option to opt into the new format, but by default will keep their existing format for now.</p>
<p>For more information, see the <a href="https://opensource.axo.dev/cargo-dist/book/workspaces/structure.html" rel="noopener noreferrer">workspace docs</a>.</p>
<ul>
<li>impl
<ul>
<li>@Gankra <a href="https://github.com/axodotdev/cargo-dist/pull/1422" rel="noopener noreferrer">doc: address most config TODOs</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1426" rel="noopener noreferrer">feat: adjust new config opt-in</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1430" rel="noopener noreferrer">fix: handle final config todo</a></li>
</ul>
</li>
</ul>
<h2>Installer improvements</h2>
<p>This release contains a suite of improvements to our installers.</p>
<h3>"Unmanaged" install type</h3>
<p>We now support a new install type, "unmanaged" installs. This is intended for users installing in ephemeral install methods such as CI, and disables several features that are unneeded in those environments. Specifically, it:</p>
<ul>
<li>Disables updater-related tooling, including install receipt creation</li>
<li>Disables modification of the user's <code>PATH</code>, including modification of dotfiles</li>
<li>Forces a flat installation layout, installing all files into a single directory</li>
</ul>
<p>For more information, see the <a href="https://opensource.axo.dev/cargo-dist/book/installers/usage.html" rel="noopener noreferrer">installer usage docs</a>.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1410" rel="noopener noreferrer">feat: unmanaged installs</a></li>
</ul>
<h3>Improved path modification options</h3>
<p>While we've always provided options to turn off modifying the user's <code>PATH</code> in the installer, this behaviour was inconsistent between the shell and PowerShell installers. In this release, we've unified the behaviour. The current recommended path is to use environment variables; the variable controlling this is <code>APPNAME_NO_MODIFY_PATH</code>, where <code>APPNAME</code> is the name of your application. For example, <code>AXOLOTLSAY_NO_MODIFY_PATH</code> for an app named <code>axolotlsay</code>. The commandline flag, which was named inconsistently between platforms, has been deprecated.</p>
<p>We've also made a change to ensure that the user's preference for the "don't modify <code>PATH</code>" option is persisted across upgrades. This fixes an issue present in previous versions where it would only be respected on initial installation, not in calls to axoupdater.</p>
<p>For more information, see the <a href="https://opensource.axo.dev/cargo-dist/book/installers/usage.html" rel="noopener noreferrer">installer usage docs</a>.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1410" rel="noopener noreferrer">feat: unmanaged installs</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1415" rel="noopener noreferrer">feat: deprecate --no-modify-path</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1421" rel="noopener noreferrer">feat: track NO_MODIFY_PATH for updates</a></li>
</ul>
</li>
</ul>
<h2>npm packages can now use any archive format</h2>
<p>In previous versions, enabling the npm installer would require your package to be distributed using <code>.tar.gz</code> archives on all platforms, including Windows. This release removes that restriction by rewriting a section of the npm installer code.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1423" rel="noopener noreferrer">feat: support any format in npm</a></li>
</ul>
<h2>Axoupdater version checking</h2>
<p>Users who implement an updater by using axoupdater as a library always need to make sure that library is up to date so that they're able to make use of the latest features. This release contains a version checker which detects if your software is using an out-of-date version of axoupdater which may cause problems, and will alert you that an update is needed during builds. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/installers/updater.html#minimum-supported-version-checking" rel="noopener noreferrer">the documentation</a>.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1432" rel="noopener noreferrer">feat: add minimum supported axoupdater check (library)</a></li>
</ul>
<h2>Standalone axoupdater installation fix</h2>
<p>cargo-dist versions 0.21.1, 0.22.0 and 0.22.1 contain a bug which caused the standalone installer to fail to install when using the shell installer. End users who installed your software via installers generated with these versions will not have received a standalone installer along with your software. This bug is fixed beginning with this release. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/installers/updater.html#releases-with-issues-surrounding-the-standalone-updater" rel="noopener noreferrer">the documentation</a>.</p>
<ul>
<li>impl @mistydemeo
<ul>
<li><a href="https://github.com/axodotdev/cargo-dist/pull/1444" rel="noopener noreferrer">fix: standalone updater installation</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist/pull/1451" rel="noopener noreferrer">fix: invalid updater for first in array</a></li>
</ul>
</li>
</ul>
]]></content:encoded></item><item><title>Version 0.23.0-prerelease.2</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.23.0-prerelease.2</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.23.0-prerelease.2</guid><content:encoded><![CDATA[<p>We're back from a longer-than-usual break between releases with a feature-filled release!</p>
<h2>The new config format emerges</h2>
<p>Over the past few months, we've been working towards a new config format. Up to now, aside from a few references in the documentation, these changes have been internal and haven't been visible to users. This release marks the first user-facing side of the new config format.</p>
<p>This new config format uses the <code>dist-workspace.toml</code> and <code>dist.toml</code> files that were originally created for non-Rust projects. It allows us to unify project configuration formats between languages, and allows you to configure cargo-dist without adding content to your root <code>Cargo.toml</code>. In this release, newly <code>cargo init</code>ted Rust projects will use the new format. Existing projects will be given the option to opt into the new format, but by default will keep their existing format for now.</p>
<p>For more information, see the <a href="https://opensource.axo.dev/cargo-dist/book/workspaces/structure.html" rel="noopener noreferrer">workspace docs</a>.</p>
<ul>
<li>impl
<ul>
<li>@Gankra <a href="https://github.com/axodotdev/cargo-dist/pull/1422" rel="noopener noreferrer">doc: address most config TODOs</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1426" rel="noopener noreferrer">feat: adjust new config opt-in</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1430" rel="noopener noreferrer">fix: handle final config todo</a></li>
</ul>
</li>
</ul>
<h2>Installer improvements</h2>
<p>This release contains a suite of improvements to our installers.</p>
<h3>"Unmanaged" install type</h3>
<p>We now support a new install type, "unmanaged" installs. This is intended for users installing in ephemeral install methods such as CI, and disables several features that are unneeded in those environments. Specifically, it:</p>
<ul>
<li>Disables updater-related tooling, including install receipt creation</li>
<li>Disables modification of the user's <code>PATH</code>, including modification of dotfiles</li>
<li>Forces a flat installation layout, installing all files into a single directory</li>
</ul>
<p>For more information, see the <a href="https://opensource.axo.dev/cargo-dist/book/installers/usage.html" rel="noopener noreferrer">installer usage docs</a>.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1410" rel="noopener noreferrer">feat: unmanaged installs</a></li>
</ul>
<h3>Improved path modification options</h3>
<p>While we've always provided options to turn off modifying the user's <code>PATH</code> in the installer, this behaviour was inconsistent between the shell and PowerShell installers. In this release, we've unified the behaviour. The current recommended path is to use environment variables; the variable controlling this is <code>APPNAME_NO_MODIFY_PATH</code>, where <code>APPNAME</code> is the name of your application. For example, <code>AXOLOTLSAY_NO_MODIFY_PATH</code> for an app named <code>axolotlsay</code>. The commandline flag, which was named inconsistently between platforms, has been deprecated.</p>
<p>We've also made a change to ensure that the user's preference for the "don't modify <code>PATH</code>" option is persisted across upgrades. This fixes an issue present in previous versions where it would only be respected on initial installation, not in calls to axoupdater.</p>
<p>For more information, see the <a href="https://opensource.axo.dev/cargo-dist/book/installers/usage.html" rel="noopener noreferrer">installer usage docs</a>.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1410" rel="noopener noreferrer">feat: unmanaged installs</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1415" rel="noopener noreferrer">feat: deprecate --no-modify-path</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1421" rel="noopener noreferrer">feat: track NO_MODIFY_PATH for updates</a></li>
</ul>
</li>
</ul>
<h2>npm packages can now use any archive format</h2>
<p>In previous versions, enabling the npm installer would require your package to be distributed using <code>.tar.gz</code> archives on all platforms, including Windows. This release removes that restriction by rewriting a section of the npm installer code.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1423" rel="noopener noreferrer">feat: support any format in npm</a></li>
</ul>
<h2>Axoupdater version checking</h2>
<p>Users who implement an updater by using axoupdater as a library always need to make sure that library is up to date so that they're able to make use of the latest features. This release contains a version checker which detects if your software is using an out-of-date version of axoupdater which may cause problems, and will alert you that an update is needed during builds. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/installers/updater.html#minimum-supported-version-checking" rel="noopener noreferrer">the documentation</a>.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1432" rel="noopener noreferrer">feat: add minimum supported axoupdater check (library)</a></li>
</ul>
<h2>Standalone axoupdater installation fix</h2>
<p>cargo-dist versions 0.21.1, 0.22.0 and 0.22.1 contain a bug which caused the standalone installer to fail to install when using the shell installer. End users who installed your software via installers generated with these versions will not have received a standalone installer along with your software. This bug is fixed beginning with this release. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/installers/updater.html#releases-with-issues-surrounding-the-standalone-updater" rel="noopener noreferrer">the documentation</a>.</p>
<ul>
<li>impl @mistydemeo
<ul>
<li><a href="https://github.com/axodotdev/cargo-dist/pull/1444" rel="noopener noreferrer">fix: standalone updater installation</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist/pull/1451" rel="noopener noreferrer">fix: invalid updater for first in array</a></li>
</ul>
</li>
</ul>
]]></content:encoded></item><item><title>Version 0.23.0-prerelease.1</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.23.0-prerelease.1</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.23.0-prerelease.1</guid><content:encoded><![CDATA[<p>We're back from a longer-than-usual break between releases with a feature-filled release!</p>
<h2>The new config format emerges</h2>
<p>Over the past few months, we've been working towards a new config format. Up to now, aside from a few references in the documentation, these changes have been internal and haven't been visible to users. This release marks the first user-facing side of the new config format.</p>
<p>This new config format uses the <code>dist-workspace.toml</code> and <code>dist.toml</code> files that were originally created for non-Rust projects. It allows us to unify project configuration formats between languages, and allows you to configure cargo-dist without adding content to your root <code>Cargo.toml</code>. In this release, newly <code>cargo init</code>ted Rust projects will use the new format. Existing projects will be given the option to opt into the new format, but by default will keep their existing format for now.</p>
<p>For more information, see the <a href="https://opensource.axo.dev/cargo-dist/book/workspaces/structure.html" rel="noopener noreferrer">workspace docs</a>.</p>
<ul>
<li>impl
<ul>
<li>@Gankra <a href="https://github.com/axodotdev/cargo-dist/pull/1422" rel="noopener noreferrer">doc: address most config TODOs</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1426" rel="noopener noreferrer">feat: adjust new config opt-in</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1430" rel="noopener noreferrer">fix: handle final config todo</a></li>
</ul>
</li>
</ul>
<h2>Installer improvements</h2>
<p>This release contains a suite of improvements to our installers.</p>
<h3>"Unmanaged" install type</h3>
<p>We now support a new install type, "unmanaged" installs. This is intended for users installing in ephemeral install methods such as CI, and disables several features that are unneeded in those environments. Specifically, it:</p>
<ul>
<li>Disables updater-related tooling, including install receipt creation</li>
<li>Disables modification of the user's <code>PATH</code>, including modification of dotfiles</li>
<li>Forces a flat installation layout, installing all files into a single directory</li>
</ul>
<p>For more information, see the <a href="https://opensource.axo.dev/cargo-dist/book/installers/usage.html" rel="noopener noreferrer">installer usage docs</a>.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1410" rel="noopener noreferrer">feat: unmanaged installs</a></li>
</ul>
<h3>Improved path modification options</h3>
<p>While we've always provided options to turn off modifying the user's <code>PATH</code> in the installer, this behaviour was inconsistent between the shell and PowerShell installers. In this release, we've unified the behaviour. The current recommended path is to use environment variables; the variable controlling this is <code>APPNAME_NO_MODIFY_PATH</code>, where <code>APPNAME</code> is the name of your application. For example, <code>AXOLOTLSAY_NO_MODIFY_PATH</code> for an app named <code>axolotlsay</code>. The commandline flag, which was named inconsistently between platforms, has been deprecated.</p>
<p>We've also made a change to ensure that the user's preference for the "don't modify <code>PATH</code>" option is persisted across upgrades. This fixes an issue present in previous versions where it would only be respected on initial installation, not in calls to axoupdater.</p>
<p>For more information, see the <a href="https://opensource.axo.dev/cargo-dist/book/installers/usage.html" rel="noopener noreferrer">installer usage docs</a>.</p>
<ul>
<li>impl
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1410" rel="noopener noreferrer">feat: unmanaged installs</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1415" rel="noopener noreferrer">feat: deprecate --no-modify-path</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1421" rel="noopener noreferrer">feat: track NO_MODIFY_PATH for updates</a></li>
</ul>
</li>
</ul>
<h2>npm packages can now use any archive format</h2>
<p>In previous versions, enabling the npm installer would require your package to be distributed using <code>.tar.gz</code> archives on all platforms, including Windows. This release removes that restriction by rewriting a section of the npm installer code.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1423" rel="noopener noreferrer">feat: support any format in npm</a></li>
</ul>
<h2>Axoupdater version checking</h2>
<p>Users who implement an updater by using axoupdater as a library always need to make sure that library is up to date so that they're able to make use of the latest features. This release contains a version checker which detects if your software is using an out-of-date version of axoupdater which may cause problems, and will alert you that an update is needed during builds. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/installers/updater.html#minimum-supported-version-checking" rel="noopener noreferrer">the documentation</a>.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1432" rel="noopener noreferrer">feat: add minimum supported axoupdater check (library)</a></li>
</ul>
<h2>Standalone axoupdater installation fix</h2>
<p>cargo-dist versions 0.21.1, 0.22.0 and 0.22.1 contain a bug which caused the standalone installer to fail to install when using the shell installer. End users who installed your software via installers generated with these versions will not have received a standalone installer along with your software. This bug is fixed beginning with this release. For more information, see <a href="https://opensource.axo.dev/cargo-dist/book/installers/updater.html#releases-with-issues-surrounding-the-standalone-updater" rel="noopener noreferrer">the documentation</a>.</p>
<ul>
<li>impl @mistydemeo
<ul>
<li><a href="https://github.com/axodotdev/cargo-dist/pull/1444" rel="noopener noreferrer">fix: standalone updater installation</a></li>
<li><a href="https://github.com/axodotdev/cargo-dist/pull/1451" rel="noopener noreferrer">fix: invalid updater for first in array</a></li>
</ul>
</li>
</ul>
]]></content:encoded></item><item><title>Version 0.22.1 (2024-09-04)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.22.1</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.22.1</guid><content:encoded><![CDATA[<p>This is a small patch release that incidentally includes some initial groundwork for a new feature.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/1382" rel="noopener noreferrer">fix: give PATH update instructions for cmd too</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/1390" rel="noopener noreferrer">fix: make linkage truly infallible</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1312" rel="noopener noreferrer">feat: initial impl of Mac .pkg installer</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.22.1-prerelease.2</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.22.1-prerelease.2</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.22.1-prerelease.2</guid><content:encoded><![CDATA[<p>This is a small patch release that incidentally includes some initial groundwork for a new feature.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/1382" rel="noopener noreferrer">fix: give PATH update instructions for cmd too</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/1390" rel="noopener noreferrer">fix: make linkage truly infallible</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1312" rel="noopener noreferrer">feat: initial impl of Mac .pkg installer</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.22.1-prerelease.1</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.22.1-prerelease.1</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.22.1-prerelease.1</guid><content:encoded><![CDATA[<p>This is a small patch release that incidentally includes some initial groundwork for a new feature.</p>
<ul>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/1382" rel="noopener noreferrer">fix: give PATH update instructions for cmd too</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/1390" rel="noopener noreferrer">fix: make linkage truly infallible</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1312" rel="noopener noreferrer">feat: initial impl of Mac .pkg installer</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.22.0 (2024-08-28)</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.22.0</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.22.0</guid><content:encoded><![CDATA[<p>This patch release fixes several bugs and provides some nice quality of life improvements. These fixes are largely related to our installers, shell, powershell, and homebrew as well as managing some papercuts in the <code>dist init</code> command and error handling.</p>
<h2>App-branded installer environment variables</h2>
<p>We generate installers for our users- and then our <em>users' users</em> use those installers. Those users don't know they are using <code>dist</code> and, if we do our job right, should never have to.</p>
<p>While we had implemented some environment variables that enable users to control the behavior of installers, previously they were largely designed for internal use, and therefore namespaced with <code>DIST</code>. However, we quickly realized that this isn't suitable for having our users communicate with their users- so we've enabled the generation of app-branded installer customization environment variables- so that installer users can leverage environment variables that are branded to the application they are trying to install.</p>
<p>Right now, the only customization we allow for installers is the install directory- so instead of <code>CARGO_DIST_FORCE_INSTALL_DIR</code>, you can tell your users to use <code>AXOLOTLSAY_INSTALL_DIR</code> (if your app is named <code>axolotlsay</code>). If you have a name with hyphens or other characters, we normalize it for you, and you can find this value at the <code>install_dir_env_var</code> field in the <code>dist-manifest.json</code> that is generated with each of your releases.</p>
<ul>
<li>impl @mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1377" rel="noopener noreferrer">add app branded env var for custom dir to installers</a></li>
</ul>
<h2>Homebrew license metadata</h2>
<p>Currently, when publishing to a Homebrew tap, whatever string is in the project's license field (usually a SPDX license expression) gets passed into license in the Homebrew formula. However, rather than using SPDX syntax, Homebrew has its own ruby syntax for specifying licenses. So, when passed an SPDX expression, Homebrew:</p>
<ul>
<li>Cannot provide as detailed information about the package's licensing.</li>
<li>Throws errors when linting the formula with brew audit/brew test-bot.</li>
</ul>
<p>This PR translates the SPDX expression to the Homebrew license DSL.</p>
<ul>
<li>impl @cxreiff <a href="https://github.com/axodotdev/cargo-dist/pull/1345" rel="noopener noreferrer">translate SPDX expressions to Homebrew license DSL to produce better Homebrew package metadata</a></li>
</ul>
<h2>Homebrew compliance (<code>brew style</code>)</h2>
<p>Creating a personal tap with brew tap-new creates a default Github Actions workflow that runs a homebrew-specific style check (brew style ) on the repo. Cargo-dist's generated homebrew formulas fail this style check. This does not block the core functionality of cargo-dist's homebrew publishing functionality (formula still functions), but does mean that users whorun <code>brew style</code> (which is a side effect of creating a tap with <code>brew tap-new</code>) would get frustrating errors.</p>
<p>Rather than separately chasing formatting issues as they come up, this PR updates the homebrew publish workflow to install and run <code>brew style --fix</code> on each formula before committing it.</p>
<ul>
<li>impl
<ul>
<li>@cxreiff <a href="https://github.com/axodotdev/cargo-dist/pull/1340" rel="noopener noreferrer">format homebrew formulas with brew style --fix</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1354" rel="noopener noreferrer">enable brew style linters in tests</a></li>
</ul>
</li>
</ul>
<h2>Fixes</h2>
<ul>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1379" rel="noopener noreferrer">enable powershell installer to respect NoModifyPath from env</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/1373" rel="noopener noreferrer">improve powershell installer portability by updating ExecutionPolicy flag and offering better hints</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1357" rel="noopener noreferrer">handle <code>ar</code> archives when parsing Windows objects, ensure unsupported binary linkage checks are non-fatal, and improve linkage checker errors</a></li>
<li>@gankra <a href="https://github.com/axodotdev/cargo-dist/pull/1360" rel="noopener noreferrer">improve <code>init</code> errors for custom projects, and ensure prompts are more contextual</a></li>
<li>@mistydemeo <a href="https://github.com/axodotdev/cargo-dist/pull/1358" rel="noopener noreferrer">update reference to renamed config in error message</a></li>
</ul>
]]></content:encoded></item><item><title>Version 0.21.2-prerelease.2</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.21.2-prerelease.2</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.21.2-prerelease.2</guid><content:encoded><![CDATA[<p>Nothing Yet!</p>
]]></content:encoded></item><item><title>Version 0.21.2-prerelease.1</title><link>http://127.0.0.1:7979/cargo-dist/changelog/v0.21.2-prerelease.1</link><category domain="https://github.com/axodotdev/cargo-dist">dist Changelog</category><guid>http://127.0.0.1:7979/cargo-dist/changelog/v0.21.2-prerelease.1</guid><content:encoded><![CDATA[<p>Nothing Yet!</p>
]]></content:encoded></item></channel></rss>